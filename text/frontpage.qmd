```{r build-frontpage, echo=FALSE, results='asis'}
# Handle paths correctly since we're in text/ subdirectory
if (file.exists("../scripts/utils.R")) {
  source("../scripts/utils.R")
} else {
  source("scripts/utils.R")  # fallback if called from root
}

# Try to calculate thesis stats, with fallback
tryCatch({
  # Change to parent directory temporarily for file paths to work
  old_wd <- getwd()
  if (basename(getwd()) == "text") {
    setwd("..")
  }
  
  stats <- count_thesis_pages(verbose = FALSE)
  length_text <- sprintf("%.1f standard pages (%s characters)", 
                        stats$total_pages, 
                        format(stats$total_chars, big.mark = ","))
  
  # Restore working directory
  setwd(old_wd)
  
}, error = function(e) {
  # Fallback if thesis stats calculation fails
  length_text <- "Length calculation unavailable"
  warning("Could not calculate thesis length: ", e$message)
})

# Get metadata safely from both book section and top-level
book_meta <- rmarkdown::metadata$book
top_meta <- rmarkdown::metadata
get_meta <- function(field, prefer_book = TRUE) {
  if (prefer_book && !is.null(book_meta[[field]])) {
    book_meta[[field]]
  } else if (!is.null(top_meta[[field]])) {
    top_meta[[field]]
  } else {
    NULL
  }
}

# Build titlepage content conditionally
cat("\\begin{titlepage}\n")
cat("\\centering\n\n")
cat("\\vspace*{1cm}\n\n")

# Logo (optional, from top-level)
if (!is.null(get_meta("logo", prefer_book = FALSE))) {
  cat("\\includegraphics[width=0.3\\textwidth]{", get_meta("logo", prefer_book = FALSE), "}\n\n")
  cat("\\vspace{1cm}\n\n")
}

# University and department (optional, from top-level)
if (!is.null(get_meta("university", prefer_book = FALSE)) || !is.null(get_meta("department", prefer_book = FALSE))) {
  if (!is.null(get_meta("university", prefer_book = FALSE))) {
    cat("{\\Large ", get_meta("university", prefer_book = FALSE), " \\par}\n")
  }
  if (!is.null(get_meta("department", prefer_book = FALSE))) {
    cat("{\\large ", get_meta("department", prefer_book = FALSE), " \\par}\n")
  }
  cat("\n\\vspace{3cm}\n\n")
} else {
  cat("\\vspace{4cm}\n\n")
}

# Title and subtitle (from book metadata)
cat("{\\huge\\bfseries ", get_meta("title"), " \\par}\n\n")
cat("\\vspace{0.5cm}\n\n")
if (!is.null(get_meta("subtitle"))) {
  cat("{\\Large\\itshape ", get_meta("subtitle"), " \\par}\n\n")
}
cat("\\vspace{2cm}\n\n")

# Author (from book metadata)
cat("{\\Large ", get_meta("author"), " \\par}\n\n")

# Degree (optional, from top-level)
if (!is.null(get_meta("degree", prefer_book = FALSE))) {
  cat("\\vspace{0.5cm}\n\n")
  cat(get_meta("degree", prefer_book = FALSE), "\n\n")
}

# Supervisor (optional, from top-level)
if (!is.null(get_meta("supervisor", prefer_book = FALSE))) {
  cat("\\vspace{1.5cm}\n\n")
  cat("\\textbf{Supervisor:} ", get_meta("supervisor", prefer_book = FALSE), "\n\n")
}

cat("\\vfill\n\n")

# Date (from book metadata)
if (!is.null(get_meta("date"))) {
  cat(get_meta("date"), "\n\n")
}

# Thesis length
cat("\\vspace{0.5cm}\n\n")
cat("\\textit{", length_text, "}\n\n")

cat("\\end{titlepage}\n")
```